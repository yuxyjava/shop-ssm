<?xml version="1.0" encoding="GBK"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xmlns:aop="http://www.springframework.org/schema/aop"
	     xmlns:tx="http://www.springframework.org/schema/tx"
	     xmlns:context="http://www.springframework.org/schema/context" 
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	       default-autowire="byName"
	     >
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:system.properties</value>
            </list>
        </property>
    </bean>


<bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="url">
            <value>${jdbc.dbcp.url}</value>
        </property>
        <property name="driverClassName">
            <value>${jdbc.dbcp.driverClassName}</value>
        </property>
        <property name="username">
            <value>${jdbc.dbcp.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.dbcp.password}</value>
        </property>
        <!-- 连接池中的最大的连接数 -->
        <property name="maxActive">
            <value>${jdbc.dbcp.maxActive}</value>
        </property>
        <!-- 最大等待的时间 (单位:毫秒) -->
        <property name="maxWait">
            <value>${jdbc.dbcp.maxWait}</value>
        </property>
    </bean>
	
    <!-- SqlMap setup for iBATIS Database Layer -->
    <bean id="sqlMapClient"  class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:sql-map-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	 <!--proxy-target-class="true"-->
	<aop:config>
    <aop:advisor pointcut="execution(* com.jk.shop.service..*.*(..))" advice-ref="txAdvice"/>
    </aop:config>

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager"><!-- 配置事务管理器 -->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" read-only="true"/><!-- 如果不是以上三种，则配置成只读事务(如select)。只读事务可以提高性能，当更新某个对象时，将不会再做脏数据检查。(因为是只读的并不用更新，所以不用再作比较,判断是否读取到脏数据。) -->
		</tx:attributes>
	</tx:advice>
   
    <context:component-scan base-package="com.jk.shop.service" />
    <context:component-scan base-package="com.jk.shop.dao" />
    
   
</beans>
